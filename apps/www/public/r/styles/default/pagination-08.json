{
  "name": "pagination-08",
  "type": "registry:example",
  "files": [
    {
      "path": "example/components/paginations/pagination-08.tsx",
      "content": "import { usePagination } from \"@/registry/default/hooks/use-pagination\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/button\";\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n} from \"@/components/ui/pagination\";\n\ntype PaginationProps = {\n  currentPage: number;\n  totalPages: number;\n  paginationItemsToDisplay?: number;\n};\n\nexport default function PaginationDemo({\n  currentPage,\n  totalPages,\n  paginationItemsToDisplay = 5,\n}: PaginationProps) {\n  const { pages, showLeftEllipsis, showRightEllipsis } = usePagination({\n    currentPage,\n    totalPages,\n    paginationItemsToDisplay,\n  });\n\n  return (\n    <Pagination>\n      <PaginationContent className=\"inline-flex gap-0 -space-x-px rounded-lg shadow-sm shadow-black/5 rtl:space-x-reverse\">\n        {/* Previous page button */}\n        <PaginationItem className=\"[&:first-child>a]:rounded-s-lg [&:last-child>a]:rounded-e-lg\">\n          <PaginationLink\n            className={cn(\n              buttonVariants({\n                variant: \"outline\",\n              }),\n              \"rounded-none shadow-none focus-visible:z-10 aria-disabled:pointer-events-none [&[aria-disabled]>svg]:opacity-50\",\n            )}\n            href={currentPage === 1 ? undefined : `/page/${currentPage - 1}`}\n            aria-label=\"Go to previous page\"\n            aria-disabled={currentPage === 1 ? true : undefined}\n            role={currentPage === 1 ? \"link\" : undefined}\n          >\n            <ChevronLeft size={16} strokeWidth={2} aria-hidden=\"true\" />\n          </PaginationLink>\n        </PaginationItem>\n\n        {/* Left ellipsis (...) */}\n        {showLeftEllipsis && (\n          <PaginationItem className=\"[&:first-child>a]:rounded-s-lg [&:last-child>a]:rounded-e-lg\">\n            <PaginationEllipsis />\n          </PaginationItem>\n        )}\n\n        {/* Page number links */}\n        {pages.map((page) => (\n          <PaginationItem key={page}>\n            <PaginationLink\n              className={cn(\n                buttonVariants({\n                  variant: \"outline\",\n                }),\n                \"rounded-none shadow-none focus-visible:z-10\",\n                page === currentPage && \"bg-accent\",\n              )}\n              href={`/page/${page}`}\n              isActive={page === currentPage}\n            >\n              {page}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n\n        {/* Right ellipsis (...) */}\n        {showRightEllipsis && (\n          <PaginationItem className=\"[&:first-child>a]:rounded-s-lg [&:last-child>a]:rounded-e-lg\">\n            <PaginationEllipsis\n              className={cn(\n                buttonVariants({\n                  variant: \"outline\",\n                }),\n                \"pointer-events-none rounded-none shadow-none\",\n              )}\n            />\n          </PaginationItem>\n        )}\n\n        {/* Next page button */}\n        <PaginationItem className=\"[&:first-child>a]:rounded-s-lg [&:last-child>a]:rounded-e-lg\">\n          <PaginationLink\n            className={cn(\n              buttonVariants({\n                variant: \"outline\",\n              }),\n              \"rounded-none shadow-none focus-visible:z-10 aria-disabled:pointer-events-none [&[aria-disabled]>svg]:opacity-50\",\n            )}\n            href={\n              currentPage === totalPages\n                ? undefined\n                : `/page/${currentPage + 1}`\n            }\n            aria-label=\"Go to next page\"\n            aria-disabled={currentPage === totalPages ? true : undefined}\n            role={currentPage === totalPages ? \"link\" : undefined}\n          >\n            <ChevronRight size={16} strokeWidth={2} aria-hidden=\"true\" />\n          </PaginationLink>\n        </PaginationItem>\n      </PaginationContent>\n    </Pagination>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}