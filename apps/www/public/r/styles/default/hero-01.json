{
  "name": "hero-01",
  "type": "registry:block",
  "description": "A simple hero section with react types ",
  "registryDependencies": [],
  "files": [
    {
      "path": "blocks/hero-01/page.tsx",
      "content": "\"use client\";\n\n// this is a client component\nimport { useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { StrokeDance } from \"@/registry/default/blocks/hero-01/components/stroke-dance\";\nimport { TypeWriter } from \"@/registry/default/blocks/hero-01/components/type-writer\";\nimport { DIcons } from \"dicons\";\n\nimport DotPattern from \"@/components/ui/backgrounds/dot-pattern\";\nimport { Button } from \"@/components/ui/button\";\nconst Hero = () => {\n  const talkAbout = [\n    \"Graphic Design\",\n    \"Branding\",\n    \"Web Design\",\n    \"Web Develop\",\n    \"Marketing\",\n    \"UI UX\",\n    \"Social Media\",\n  ];\n\n  useEffect(() => {\n    StrokeDance();\n  }, []);\n\n  return (\n    <section id=\"home\" className=\"relative min-h-screen w-full overflow-hidden\">\n      <div className=\"animation-delay-8 animate-fadeIn  mt-10 flex flex-col items-center justify-center px-4 text-center\">\n        <div className=\"z-10 mb-6 mt-10 sm:justify-center md:mb-4 md:mt-20\">\n          <div className=\"relative flex items-center whitespace-nowrap rounded-full bg-white px-3 py-1 text-xs leading-6 text-slate-600 ring-1 ring-slate-200 dark:bg-black dark:text-slate-400 dark:ring-slate-800\">\n            <DIcons.Shapes className=\"h-5 p-1\" /> Introducing Dicons.\n            <a\n              href=\"/products/dicons\"\n              rel=\"noreferrer\"\n              className=\"hover:text-ali ml-1 flex items-center font-semibold\"\n            >\n              <div className=\"absolute inset-0 flex\" aria-hidden=\"true\" />\n              Explore{\" \"}\n              <span aria-hidden=\"true\">\n                <DIcons.ArrowRight className=\"h-4 w-4\" />\n              </span>\n            </a>\n          </div>\n        </div>\n\n        <div className=\"mb-10 mt-4 md:mt-6\">\n          <div className=\"px-2\">\n            <div className=\"border-ali/50 relative mx-auto h-full max-w-6xl border p-6 [mask-image:radial-gradient(800rem_96rem_at_center,white,transparent)] md:px-6 md:py-12\">\n              <h1 className=\"flex select-none flex-col px-3 py-2 text-center text-5xl font-semibold leading-none tracking-tight md:flex-col md:text-8xl lg:flex-row lg:text-8xl\">\n                <DIcons.Plus\n                  strokeWidth={4}\n                  className=\"text-ali absolute -left-4 -top-4 h-8 w-8\"\n                />\n                <DIcons.Plus\n                  strokeWidth={4}\n                  className=\"text-ali absolute -bottom-4 -left-4 h-8 w-8\"\n                />\n                <DIcons.Plus\n                  strokeWidth={4}\n                  className=\"text-ali absolute -right-4 -top-4 h-8 w-8\"\n                />\n                <DIcons.Plus\n                  strokeWidth={4}\n                  className=\"text-ali absolute -bottom-4 -right-4 h-8 w-8\"\n                />\n                Your complete platform for the Design.\n              </h1>\n              <div className=\"flex items-center justify-center gap-1\">\n                <span className=\"relative flex h-3 w-3 items-center justify-center\">\n                  <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-green-500 opacity-75\"></span>\n                  <span className=\"relative inline-flex h-2 w-2 rounded-full bg-green-500\"></span>\n                </span>\n                <p className=\"text-xs text-green-500\">Available Now</p>\n              </div>\n\n              <DotPattern className=\"-z-10 opacity-50\" width={5} height={5} />\n            </div>\n          </div>\n\n          <h1 className=\"mt-8 text-2xl md:text-2xl\">\n            Welcome to my creative playground! I&#39;m{\" \"}\n            <span className=\"text-ali font-bold\">Ali </span>\n          </h1>\n\n          <p className=\"md:text-md mx-auto mb-16 mt-2 max-w-2xl px-6 text-sm text-slate-600 dark:text-slate-400 sm:px-6 md:max-w-4xl md:px-20 lg:text-lg\">\n            I craft enchanting visuals for brands, and conjure design resources\n            to empower others. I am an expert in design like{\" \"}\n            <TypeWriter strings={talkAbout} />.\n          </p>\n          <div className=\"flex justify-center gap-2\">\n            <Link href={\"/dashboard\"}>\n              <Button variant=\"default\" size=\"lg\">\n                Start Project\n              </Button>\n            </Link>\n            <Link href={\"https://cal.com/aliimam/designali\"} target=\"_blank\">\n              <Button variant=\"outline\" size=\"lg\">\n                Book a call\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <canvas\n        className=\"bg-skin-base pointer-events-none absolute inset-0 mx-auto\"\n        id=\"canvas\"\n      ></canvas>\n    </section>\n  );\n};\n\nexport default Hero;\n",
      "type": "registry:page",
      "target": "app/hero/page.tsx"
    },
    {
      "path": "blocks/hero-01/components/stroke-dance.js",
      "content": "function n(e) {\n  // @ts-ignore\n  this.init(e || {});\n}\nn.prototype = {\n  // @ts-ignore\n  init: function (e) {\n    // @ts-ignore\n    this.phase = e.phase || 0;\n    // @ts-ignore\n    this.offset = e.offset || 0;\n    // @ts-ignore\n    this.frequency = e.frequency || 0.001;\n    // @ts-ignore\n    this.amplitude = e.amplitude || 1;\n  },\n  update: function () {\n    return (\n      // @ts-ignore\n      (this.phase += this.frequency),\n      // @ts-ignore\n      (e = this.offset + Math.sin(this.phase) * this.amplitude)\n    );\n  },\n  value: function () {\n    return e;\n  },\n};\n\n// @ts-ignore\nfunction Line(e) {\n  // @ts-ignore\n  this.init(e || {});\n}\n\nLine.prototype = {\n  // @ts-ignore\n  init: function (e) {\n    // @ts-ignore\n    this.spring = e.spring + 0.1 * Math.random() - 0.05;\n    // @ts-ignore\n    this.friction = E.friction + 0.01 * Math.random() - 0.005;\n    // @ts-ignore\n    this.nodes = [];\n    for (var t, n = 0; n < E.size; n++) {\n      t = new Node();\n      // @ts-ignore\n      t.x = pos.x;\n      // @ts-ignore\n      t.y = pos.y;\n      // @ts-ignore\n      this.nodes.push(t);\n    }\n  },\n  update: function () {\n    // @ts-ignore\n    let e = this.spring,\n      // @ts-ignore\n      t = this.nodes[0];\n    // @ts-ignore\n    t.vx += (pos.x - t.x) * e;\n    // @ts-ignore\n    t.vy += (pos.y - t.y) * e;\n    // @ts-ignore\n    for (var n, i = 0, a = this.nodes.length; i < a; i++)\n      // @ts-ignore\n      (t = this.nodes[i]),\n        0 < i &&\n          // @ts-ignore\n          ((n = this.nodes[i - 1]),\n          (t.vx += (n.x - t.x) * e),\n          (t.vy += (n.y - t.y) * e),\n          (t.vx += n.vx * E.dampening),\n          (t.vy += n.vy * E.dampening)),\n        // @ts-ignore\n        (t.vx *= this.friction),\n        // @ts-ignore\n        (t.vy *= this.friction),\n        (t.x += t.vx),\n        (t.y += t.vy),\n        (e *= E.tension);\n  },\n  draw: function () {\n    let e,\n      t,\n      // @ts-ignore\n      n = this.nodes[0].x,\n      // @ts-ignore\n      i = this.nodes[0].y;\n    // @ts-ignore\n    ctx.beginPath();\n    // @ts-ignore\n    ctx.moveTo(n, i);\n    // @ts-ignore\n    for (var a = 1, o = this.nodes.length - 2; a < o; a++) {\n      // @ts-ignore\n      e = this.nodes[a];\n      // @ts-ignore\n      t = this.nodes[a + 1];\n      n = 0.5 * (e.x + t.x);\n      i = 0.5 * (e.y + t.y);\n      // @ts-ignore\n      ctx.quadraticCurveTo(e.x, e.y, n, i);\n    }\n    // @ts-ignore\n    e = this.nodes[a];\n    // @ts-ignore\n    t = this.nodes[a + 1];\n    // @ts-ignore\n    ctx.quadraticCurveTo(e.x, e.y, t.x, t.y);\n    // @ts-ignore\n    ctx.stroke();\n    // @ts-ignore\n    ctx.closePath();\n  },\n};\n\n// @ts-ignore\nfunction onMousemove(e) {\n  function o() {\n    lines = [];\n    for (let e = 0; e < E.trails; e++)\n      lines.push(new Line({ spring: 0.45 + (e / E.trails) * 0.025 }));\n  }\n  // @ts-ignore\n  function c(e) {\n    e.touches\n      ? // @ts-ignore\n        ((pos.x = e.touches[0].pageX), (pos.y = e.touches[0].pageY))\n      : // @ts-ignore\n        ((pos.x = e.clientX), (pos.y = e.clientY)),\n      e.preventDefault();\n  }\n  // @ts-ignore\n  function l(e) {\n    // @ts-ignore\n    1 == e.touches.length &&\n      ((pos.x = e.touches[0].pageX), (pos.y = e.touches[0].pageY));\n  }\n  document.removeEventListener(\"mousemove\", onMousemove),\n    document.removeEventListener(\"touchstart\", onMousemove),\n    document.addEventListener(\"mousemove\", c),\n    document.addEventListener(\"touchmove\", c),\n    document.addEventListener(\"touchstart\", l),\n    c(e),\n    o(),\n    render();\n}\n\nfunction render() {\n  // @ts-ignore\n  if (ctx.running) {\n    // @ts-ignore\n    ctx.globalCompositeOperation = \"source-over\";\n    // @ts-ignore\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // @ts-ignore\n    ctx.globalCompositeOperation = \"lighter\";\n    // @ts-ignore\n    ctx.strokeStyle = \"hsla(\" + Math.round(f.update()) + \",100%,50%,0.025)\";\n    // @ts-ignore\n    ctx.lineWidth = 10;\n    for (var e, t = 0; t < E.trails; t++) {\n      // @ts-ignore\n      (e = lines[t]).update();\n      e.draw();\n    }\n    // @ts-ignore\n    ctx.frame++;\n    window.requestAnimationFrame(render);\n  }\n}\n\nfunction resizeCanvas() {\n  // @ts-ignore\n  ctx.canvas.width = window.innerWidth - 20;\n  // @ts-ignore\n  ctx.canvas.height = window.innerHeight;\n}\n\n// @ts-ignore\nvar ctx,\n  // @ts-ignore\n  f,\n  e = 0,\n  pos = {},\n  // @ts-ignore\n  lines = [],\n  E = {\n    debug: true,\n    friction: 0.5,\n    trails: 80,\n    size: 50,\n    dampening: 0.025,\n    tension: 0.99,\n  };\nfunction Node() {\n  this.x = 0;\n  this.y = 0;\n  this.vy = 0;\n  this.vx = 0;\n}\n\nexport const StrokeDance = function () {\n  // @ts-ignore\n  ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n  ctx.running = true;\n  ctx.frame = 1;\n  f = new n({\n    phase: Math.random() * 2 * Math.PI,\n    amplitude: 85,\n    frequency: 0.0015,\n    offset: 285,\n  });\n  document.addEventListener(\"mousemove\", onMousemove);\n  document.addEventListener(\"touchstart\", onMousemove);\n  document.body.addEventListener(\"orientationchange\", resizeCanvas);\n  window.addEventListener(\"resize\", resizeCanvas);\n  window.addEventListener(\"focus\", () => {\n    // @ts-ignore\n    if (!ctx.running) {\n      // @ts-ignore\n      ctx.running = true;\n      render();\n    }\n  });\n  window.addEventListener(\"blur\", () => {\n    // @ts-ignore\n    ctx.running = true;\n  });\n  resizeCanvas();\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/hero-01/components/type-writer.tsx",
      "content": "\"use client\";\n\nimport { ReactTyped } from \"react-typed\";\n\ninterface TypeWriterProps {\n  strings: string[];\n}\n\nexport const TypeWriter = ({ strings }: TypeWriterProps) => {\n  return (\n    <ReactTyped\n      loop\n      typeSpeed={80}\n      backSpeed={20}\n      strings={strings}\n      smartBackspace\n      backDelay={1000}\n      loopCount={0}\n      showCursor\n      cursorChar=\"|\"\n    />\n  );\n};\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "categories": [
    "hero"
  ]
}